<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
		http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util-2.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd">

    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.FixedLocaleResolver">
    	<property name="defaultLocale"><value>en_US</value></property>
    </bean>

	<bean id="configurer" class="org.riotfamily.common.beans.config.PlaceholderWithDefaultConfigurer">
		<property name="location" value="classpath:/application.properties" />
		<property name="contextOverride" value="true" />
	</bean>

	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">
		<property name="proxyTargetClass" value="true" />
	</bean>

	<bean class="org.riotfamily.riot.runtime.RiotRuntimeBeanPostProcessor">
		<constructor-arg ref="riotRuntime" />
	</bean>

	<util:list id="messageBasenames">
		<value>/WEB-INF/riot-config/messages</value>
		<value>classpath:/org/riotfamily/riot/runtime/i18n/messages</value>
	</util:list>
	
	<bean id="messageSource" name="riotMessageSource" class="org.riotfamily.common.i18n.CodeRevealingMessageSource">
		<property name="revealCodes" value="false" />
		<property name="parentMessageSource">
			<bean class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
				<property name="defaultEncoding" value="UTF-8" />
				<property name="fallbackToSystemLocale" value="false" />
				<property name="cacheSeconds" value="1" />
		        <property name="basenames" ref="messageBasenames" />
		    </bean>
		</property>
	</bean>

	<bean id="messageCodesResolver" class="org.riotfamily.common.i18n.RiotMessageCodesResolver" />

	<!--
	  - MultipartResolver that provides information about the file upload progress
	  -->
	<bean id="multipartResolver" class="org.riotfamily.forms.fileupload.FormsMultipartResolver">
		<constructor-arg>
			<bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
		</constructor-arg>
	</bean>

	<!--
      - The default JDK map lacks some important web-related mimetypes ...
	  -->
	<bean id="fileTypeMap" class="org.riotfamily.common.io.MimetypesFileTypeMapFactoryBean">
		<property name="types">
			<list>
				<value>text/css css</value>
				<value>text/xml xml</value>
				<value>text/javascript js</value>
				<value>image/png png</value>
			</list>
		</property>
	</bean>

	<!--
	  - Exception resolver that outputs a nicly formatted error message.
	  -->
	<bean id="exceptionResolver" class="org.riotfamily.common.web.util.AdvancedMappingExceptionResolver">
		<property name="defaultErrorView" value="classpath:/org/riotfamily/riot/runtime/view/error.ftl" />
	</bean>

	<bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter" />

	<!--
	  - HandlerInterceptor that ensures that only authenticated users can
	  - access the Riot admin pages.
	  -->
	<bean id="loginInterceptor" class="org.riotfamily.riot.security.session.LoginInterceptor">
		<property name="loginUrl" value="/login" />
		<property name="excludes">
			<list>
				<value>/login</value>
				<value>/logout</value>
				<value>/resources/**</value>
			</list>
		</property>
		<property name="includes">
			<list>
				<value>/resources/*/dwr/**</value>
			</list>
		</property>
	</bean>

	<!-- BeanPostProcessor that wraps all RiotUserDao beans -->
	<bean class="org.riotfamily.riot.security.session.RiotUserDaoProcessor" />
		
	<!-- A RiotUserDao-based AuthenticationService -->
	<bean id="authenticationService" class="org.riotfamily.riot.security.auth.StaticAuthenticationService">
	 	<property name="username" value="root" />
	 	<property name="password" value="riot" />
	</bean>
	
	<!--
	  - Persistence service for SessionMetaData (last login date, last IP, etc.)
	  -->
	<bean id="sessionMetaDataStore" class="org.riotfamily.riot.security.session.TransientSessionMetaDataStore" />

	<bean id="loginManager" class="org.riotfamily.riot.security.session.LoginManager">
		<constructor-arg ref="authenticationService" />
		<property name="metaDataStore" ref="sessionMetaDataStore" />
	</bean>
	
	<bean class="org.riotfamily.riot.security.AccessControlInitializer" />

    <bean id="loggingPolicy" class="org.riotfamily.riot.security.policy.LoggingPolicy" />

	<bean id="defaultPolicy" class="org.riotfamily.riot.security.policy.GrantAllPolicy" />

	<bean id="freemarkerConfig" class="org.riotfamily.common.web.view.freemarker.RiotFreeMarkerConfigurer">
		<property name="templateLoaders">
			<list>
				<bean class="org.riotfamily.common.web.view.freemarker.ResourceTemplateLoader" />
			</list>
		</property>
		<property name="macroLibraries">
			<props>
				<prop key="common">classpath:org/riotfamily/common/web/view/freemarker/common.ftl</prop>
				<prop key="riot">classpath:org/riotfamily/riot/runtime/macro/riot.ftl</prop>
			</props>
		</property>
		<property name="freemarkerVariables">
			<map>
        		<entry key="customStyleSheets" value-ref="customStyleSheets" />
			</map>
		</property>
	</bean>
	
	<util:list id="customStyleSheets">
		<value>style/command.css</value>
		<value>style/command-custom.css</value>
	</util:list>
	
	<bean id="riotMacroHelper" class="org.riotfamily.riot.runtime.macro.RiotMacroHelperFactory">
		<constructor-arg ref="riotRuntime" />
	</bean>

	<bean id="viewResolver" class="org.riotfamily.common.web.view.freemarker.RiotFreeMarkerViewResolver">
		<property name="viewClass" value="org.riotfamily.common.web.view.freemarker.RiotFreeMarkerView" />
		<property name="cache" value="true" />
    </bean>

	<bean id="commonMacroHelper" class="org.riotfamily.common.web.view.CommonMacroHelperFactory" />

	<!-- Core list commands -->

	<bean id="editCommand" class="org.riotfamily.riot.list.command.core.EditCommand" />

	<bean id="addCommand" class="org.riotfamily.riot.list.command.core.EditCommand" />

	<bean id="viewCommand" class="org.riotfamily.riot.list.command.core.EditCommand" />

	<bean id="deleteCommand" class="org.riotfamily.riot.list.command.core.DeleteCommand" />

	<bean id="stepIntoCommand" class="org.riotfamily.riot.list.command.core.StepIntoCommand" />

	<bean id="moveUpCommand" class="org.riotfamily.riot.list.command.core.SwapCommand">
		<property name="swapWith" value="-1" />
	</bean>

	<bean id="moveDownCommand" class="org.riotfamily.riot.list.command.core.SwapCommand">
		<property name="swapWith" value="1" />
	</bean>

	<bean id="cutCommand" class="org.riotfamily.riot.list.command.core.CutCommand" />

	<bean id="copyCommand" class="org.riotfamily.riot.list.command.core.CopyCommand" />

	<bean id="pasteCommand" class="org.riotfamily.riot.list.command.core.PasteCommand" />

	<!-- Alternative cell renderer  -->

	<bean id="imageRenderer" class="org.riotfamily.riot.list.ui.render.ImageRenderer" />

	<bean id="cssClassRenderer" class="org.riotfamily.riot.list.ui.render.CssClassRenderer" />

	<bean id="messageRenderer" class="org.riotfamily.riot.list.ui.render.MessageRenderer" />

	<bean id="mediumDateRenderer" class="org.riotfamily.riot.list.ui.render.DateRenderer" />

	<bean id="localeRenderer" class="org.riotfamily.riot.list.ui.render.LocaleRenderer" />

	<bean id="countryFlagRenderer" class="org.riotfamily.riot.list.ui.render.CountryFlagRenderer" />

	<!-- Repositories -->

	<bean id="listRepository" class="org.riotfamily.riot.list.xml.XmlListRepository">
		<property name="configLocations">
			<value>/WEB-INF/riot-config/list-config.xml</value>
		</property>
		<property name="riotDaoService" ref="riotDaoService" />
	</bean>

	<util:map id="customFormElements">
		<entry key="{http://www.riotfamily.org/schema/riot/form-elements}chooser"
				value="org.riotfamily.riot.form.element.ObjectChooser" />
	</util:map>

	<bean id="formRepository" class="org.riotfamily.forms.factory.xml.XmlFormRepository">
		<property name="configLocations">
			<list>
				<value>/WEB-INF/riot-config/form-config.xml</value>
			</list>
		</property>
		<property name="mimetypesMap" ref="fileTypeMap" />
		<property name="imageCropper" ref="imageCropper" />
		<property name="customElements" ref="customFormElements" />
	</bean>

	<bean id="imageCropper" class="org.riotfamily.common.image.ImageMagickCropperFactoryBean">
		<property name="convertCommand" value="${imageMagick.convertCommand=convert}" />
	</bean>

	<bean id="editorRepository" class="org.riotfamily.riot.editor.xml.XmlEditorRepository">
		<property name="configLocations">
			<list>
				<value>/WEB-INF/riot-config/editor-config.xml</value>
			</list>
		</property>
		<property name="listRepository" ref="listRepository" />
		<property name="formRepository" ref="formRepository" />
		<property name="messageCodesResolver" ref="messageCodesResolver" />
	</bean>

	<bean id="handlerMapping" class="org.riotfamily.common.web.mapping.AdvancedBeanNameHandlerMapping">
		<property name="interceptors">
			<list>
				<ref bean="loginInterceptor" />
				<bean class="org.riotfamily.common.web.transaction.TransactionalHandlerInterceptor">
					<constructor-arg ref="transactionManager" />
				</bean>
			</list>
		</property>
	</bean>

	<!-- Controllers -->

	<!--
	  - MVC controller that displays the login form and passes the user input
	  - to the LoginManager.
	  -->
	<bean id="loginFormController" name="/login" class="org.riotfamily.riot.security.ui.LoginFormController">
		<constructor-arg ref="loginManager" />
		<property name="viewName" value="classpath:org/riotfamily/riot/security/ui/LoginFormView.ftl" />
	</bean>

	<!--
	  - MVC controller that displays the bottom status frame containing
	  - login information.
	  -->
	<bean id="statusbarController" name="/statusbar" class="org.riotfamily.riot.security.ui.LoginStatusController" />

	<!-- Controller that keeps the HTTP session alive -->
	<bean name="/ping" class="org.riotfamily.common.web.controller.SessionKeepAliveController" />

	<!--
	  - Controller that performs a logout.
	  -->
	<bean id="logoutController" name="/logout" class="org.riotfamily.riot.security.ui.LogoutController" />

	<bean id="cssProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="properties">
			<map>
				<entry key="highlight" value="#cb0038" />
				<entry key="toolbarOutline" value="#3d3d3d" />
				<entry key="resourcePath" value-ref="riotResourcePath" />
			</map>
		</property>
	</bean>

	<bean id="resourceController" name="/resources/*/@{resource*}" class="org.riotfamily.common.web.resource.ResourceController">
		<property name="pathAttribute" value="resource" />
		<property name="fileTypeMap" ref="fileTypeMap" />
		<property name="filters">
			<list>
				<bean class="org.riotfamily.common.web.resource.PropertyResourceFilter">
					<property name="match" value="/**/*.css" />
					<property name="properties" ref="cssProperties" />
				</bean>
				<bean class="org.riotfamily.common.web.resource.PropertyResourceFilter">
					<property name="match" value="/**/frameset.js" />
					<property name="propertiesMap">
						<map>
							<entry key="riotServletPrefix" value-ref="riotServletPrefix" />
						</map>
					</property>
				</bean>
			</list>
		</property>
		<property name="mappings">
			<list>
				<!-- Allow styles to be overwritten in WEB-INF/style -->
				<bean class="org.riotfamily.common.web.resource.ResourceMapping">
					<property name="path" value="/style/" />
					<property name="location" value="/WEB-INF/riot-config/style/" />
				</bean>
				<!-- Allow any resource to be overwritten in WEB-INF/resources -->
				<bean class="org.riotfamily.common.web.resource.ResourceMapping">
					<property name="path" value="/" />
					<property name="location" value="/WEB-INF/riot-config/resources/" />
				</bean>
				<!-- Riot resources -->
				<bean class="org.riotfamily.common.web.resource.ResourceMapping">
					<property name="path" value="/" />
					<property name="location" value="classpath:/org/riotfamily/riot/runtime/resources/" />
				</bean>
				<!-- Resources from the jslib jars -->
				<bean class="org.riotfamily.common.web.resource.ResourceMapping">
					<property name="path" value="/" />
					<property name="location" value="classpath:/org/riotfamily/resources/" />
				</bean>
				<!-- Form resources -->
				<bean class="org.riotfamily.common.web.resource.ResourceMapping">
					<property name="path" value="/form/" />
					<property name="location" value="classpath:/org/riotfamily/forms/runtime/resources/" />
				</bean>
			</list>
		</property>
	</bean>

	<bean id="groupController" class="org.riotfamily.riot.editor.ui.EditorGroupController">
		<constructor-arg ref="editorRepository" />
	</bean>
	<alias name="groupController" alias="/group" />
	<alias name="groupController" alias="/group/@{editorId}" />

	<bean id="editorFramesetController" name="/" class="org.springframework.web.servlet.mvc.ParameterizableViewController">
		<property name="viewName" value="classpath:/org/riotfamily/riot/runtime/view/frameset.ftl" />
	</bean>

	<bean id="pathController" name="/path" class="org.riotfamily.riot.editor.ui.PathController">
		<constructor-arg ref="editorRepository" />
	</bean>

	<bean id="formContextFactory" class="org.riotfamily.forms.controller.FormContextFactory">
		<property name="messageCodesResolver" ref="messageCodesResolver" />
		<property name="resourcePath" ref="riotResourcePath" />
	</bean>

	<bean id="listController" class="org.riotfamily.riot.list.ui.ListController">
		<property name="listService" ref="listService" />
	</bean>

	<alias name="listController" alias="/list/@{editorId}" />
	<alias name="listController" alias="/list/@{editorId}/@{parentId}" />

	<bean id="listService" class="org.riotfamily.riot.list.ui.ListServiceImpl">
		<property name="editorRepository" ref="editorRepository" />
		<property name="messageCodesResolver" ref="messageCodesResolver" />
		<property name="formContextFactory" ref="formContextFactory" />
		<property name="transactionManager" ref="transactionManager" />
	</bean>

	<bean id="formController" class="org.riotfamily.riot.form.ui.FormController">
		<constructor-arg ref="editorRepository" />
		<constructor-arg ref="formRepository" />
		<constructor-arg ref="transactionManager" />
		<constructor-arg ref="listService" />
		<property name="formContextFactory" ref="formContextFactory" />
	</bean>
	<alias name="formController" alias="/form/@{editorId}" />
	<alias name="formController" alias="/form/@{editorId}/@{objectId}" />

	<bean id="formChooserController"
			name="/form-chooser/@{editorId}"
			parent="formController"
			class="org.riotfamily.riot.form.ui.FormChooserController" />

	<bean id="viewController" class="org.riotfamily.riot.editor.ui.ViewController">
		<constructor-arg ref="editorRepository" />
		<constructor-arg ref="listService" />
	</bean>
	<alias name="viewController" alias="/view/@{editorId}" />
	<alias name="viewController" alias="/view/@{editorId}/@{objectId}" />

	<bean id="customEditorController"
		name="/custom/@{editorId}"
		class="org.riotfamily.riot.editor.ui.CustomEditorController">
		<constructor-arg ref="editorRepository" />
	</bean>

	<bean id="commandDialogController"
		name="/dialog/@{commandId}"
		class="org.riotfamily.riot.list.command.dialog.ui.DialogFormController">
		<constructor-arg ref="listRepository" />
		<property name="formContextFactory" ref="formContextFactory" />
	</bean>

	<bean id="packageListController" name="/packages" class="org.riotfamily.common.web.controller.PackageListController">
		<property name="viewName" value="classpath:/org/riotfamily/riot/runtime/view/packages.ftl" />
		<property name="patterns">
			<list>
				<value>org.riotfamily.*</value>
				<value>org.springframework.*</value>
				<value>org.hibernate.*</value>
				<value>java.*</value>
			</list>
		</property>
	</bean>

	<bean id="messageCodeRevelationController" name="/toggle-i18n" class="org.riotfamily.common.i18n.MessageCodeRevelationController" />

	<bean id="notificationListController" name="/notifications" class="org.riotfamily.riot.workflow.notification.ui.NotificationListController">
		<constructor-arg ref="notificationDao" />
	</bean>

	<bean id="statusController" name="/status" class="org.riotfamily.riot.workflow.status.ui.StatusController" />

    <bean id="jobUIUpdater" class="org.riotfamily.riot.job.ui.JobUIUpdater" />

	<bean id="jobDao" class="org.riotfamily.riot.job.persistence.InMemoryJobDao" />
	
	<bean id="jobManager" class="org.riotfamily.riot.job.JobManager">
		<constructor-arg ref="jobDao" />
		<constructor-arg ref="jobUIUpdater" />
	</bean>

	<bean id="jobUIService" class="org.riotfamily.riot.job.ui.JobUIService">
		<constructor-arg ref="jobManager" />
		<constructor-arg ref="jobDao" />
		<constructor-arg ref="jobUIUpdater" />
	</bean>

	<bean id="jobUIController" name="/job" class="org.riotfamily.common.web.controller.ParameterViewController">
		<property name="viewName" value="classpath:/org/riotfamily/riot/job/ui/JobView.ftl" />
	</bean>

	<bean id="org.directwebremoting.PageNormalizer"
		class="org.riotfamily.common.web.dwr.NoOpPageNormalizer" />

	<!--
	<bean id="org.directwebremoting.Remoter"
		class="org.riotfamily.common.web.dwr.ConstantsRemoter" />
	-->

	<bean id="csvExportController" name="/csv" class="org.riotfamily.riot.list.export.CsvExportController">
		<constructor-arg ref="editorRepository" />
	</bean>

	<!--
	  - Controller that exposes DWR services.
	  -->
	<bean id="dwrController"
		name="/resources/*/dwr/**"
		class="org.riotfamily.common.web.dwr.DwrController">
		<property name="mapping" value="dwr" />
		<property name="parameters">
			<props>
				<prop key="pollAndCometEnabled">true</prop>
				<prop key="crossDomainSessionSecurity">false</prop>
			</props>
		</property>
		<property name="configurators">
			<list>
				<bean class="org.riotfamily.common.web.dwr.SpringConfigurator">
					<property name="converters">
						<map>
							<entry key="java.lang.Exception">
								<bean class="org.directwebremoting.convert.ExceptionConverter">
									<property name="include" value="message,lineNumber" />
								</bean>
							</entry>
						</map>
					</property>
					<property name="converterTypes">
						<props>
							<prop key="org.riotfamily.riot.job.persistence.*">bean</prop>
							<prop key="org.riotfamily.riot.list.ui.*">bean</prop>
							<prop key="org.riotfamily.riot.list.command.*">bean</prop>
						</props>
					</property>
					<property name="serviceBeans">
						<map>
							<entry key="JobUIService" value-ref="jobUIService" />
							<entry key="ListService" value-ref="listService" />
						</map>
					</property>
					<property name="serviceInterfaces">
						<list>
							<value>org.riotfamily.riot.list.ui.ListService</value>
						</list>
					</property>
					<property name="signatures">
						<value>
							import org.riotfamily.riot.list.ui.ListItem;
							import org.riotfamily.riot.list.command.CommandState;
							import java.util.List;
							import javax.servlet.http.HttpServletRequest;
							ListItem.setColumns(List&lt;String&gt;);
							ListItem.setCommands(List&lt;CommandState&gt;);
							ListService.filter(String, Map&lt;String, List&gt;, HttpServletRequest);
						</value>
					</property>
				</bean>
			</list>
		</property>
	</bean>

</beans>