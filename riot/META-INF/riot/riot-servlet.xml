<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
		http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util-2.5.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

	<tx:annotation-driven />
	
	<!-- Read placeholders from application.properties  -->
	<bean id="configurer" class="org.riotfamily.common.beans.config.PlaceholderWithDefaultConfigurer">
		<property name="location" value="classpath:/application.properties" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="contextOverride" value="true" />
	</bean>
	
	<!-- FixedLocaleResolver to display the Riot user interface in English -->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.FixedLocaleResolver">
    	<property name="defaultLocale"><value>en_US</value></property>
    </bean>
    
    <!-- Initialize the RiotRuntime -->
    <bean class="org.riotfamily.riot.runtime.RiotRuntimeInitializer" />
    
    <util:list id="messageBasenames">
    	<value>/WEB-INF/i18n/messages</value>
    	<value>/WEB-INF/riot-config/messages</value>
		<value>classpath:/org/riotfamily/riot/runtime/i18n/messages</value>
	</util:list>
	
	<bean id="messageSource" name="riotMessageSource" class="org.riotfamily.common.i18n.CodeRevealingMessageSource">
		<property name="revealCodes" value="false" />
		<property name="parentMessageSource">
			<bean class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
				<property name="defaultEncoding" value="UTF-8" />
				<property name="fallbackToSystemLocale" value="false" />
				<property name="cacheSeconds" value="1" />
		        <property name="basenames" ref="messageBasenames" />
		    </bean>
		</property>
	</bean>

	<bean id="messageCodesResolver" class="org.riotfamily.common.i18n.RiotMessageCodesResolver" />

	<bean class="org.riotfamily.riot.runtime.RiotRuntimeBeanPostProcessor">
		<constructor-arg ref="riotRuntime" />
	</bean>
	
	<!--
	  - MultipartResolver that provides information about the file upload progress
	  -->
	<bean id="multipartResolver" class="org.riotfamily.forms.fileupload.FormsMultipartResolver">
		<constructor-arg>
			<bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
		</constructor-arg>
	</bean>

	<!--
	  - Exception resolver that outputs a nicely formatted error message.
	  -->
	<bean id="exceptionResolver" class="org.riotfamily.common.web.util.AdvancedMappingExceptionResolver">
		<property name="defaultErrorView" value="classpath:/org/riotfamily/riot/runtime/view/error.ftl" />
	</bean>

	<!--
	  - A Cachius cache to cache riot resources.
	  -->
	<bean id="riotCache" class="org.riotfamily.cachius.spring.CacheFactoryBean">
		<property name="cacheDir" value="${riot.riotCache.cacheDir=}" />
		<property name="cacheDirName" value="riot-cache" />
		<property name="restore" value="false" />
	</bean>
    
    <!-- 
	  - HandlerAdapter that handles CacheableControllers.
	  -->
    <bean class="org.riotfamily.cachius.spring.CacheableControllerHandlerAdapter">
		<constructor-arg>
			<bean class="org.riotfamily.cachius.CacheService">
				<constructor-arg ref="riotCache" />
			</bean>
		</constructor-arg>
	</bean>
	
	<!-- 
	  - HandlerAdapter that handles regular (non-cacheable) Controllers.
	  -->
	<bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter" />

	<!--
	  - HandlerInterceptor that ensures that only authenticated users can
	  - access the Riot admin pages.
	  -->
	<bean id="loginInterceptor" class="org.riotfamily.riot.security.session.LoginInterceptor">
		<property name="loginUrl" value="/login" />
		<property name="includesOverwriteExcludes" value="true" />
		<property name="excludes">
			<list>
				<value>/login</value>
				<value>/logout</value>
				<value>/resources/**</value>
				<value>/joined/**</value>
			</list>
		</property>
		<property name="includes">
			<list>
				<value>/resources/*/dwr/**</value>
			</list>
		</property>
	</bean>

	<!-- BeanPostProcessor that wraps all RiotUserDao beans -->
	<bean class="org.riotfamily.riot.security.session.RiotUserDaoProcessor" />
		
	<!-- A RiotUserDao-based AuthenticationService -->
	<bean id="authenticationService" class="org.riotfamily.riot.security.auth.StaticAuthenticationService">
	 	<property name="username" value="root" />
	 	<property name="password" value="riot" />
	</bean>
	
	<!--
	  - Persistence service for SessionMetaData (last login date, last IP, etc.)
	  -->
	<bean id="sessionMetaDataStore" class="org.riotfamily.riot.security.session.TransientSessionMetaDataStore" />

	<bean id="loginManager" class="org.riotfamily.riot.security.session.LoginManager">
		<constructor-arg ref="authenticationService" />
		<property name="metaDataStore" ref="sessionMetaDataStore" />
	</bean>
	
	<bean class="org.riotfamily.riot.security.AccessControlInitializer" />

    <bean id="loggingPolicy" class="org.riotfamily.riot.security.policy.LoggingPolicy" />

	<bean id="defaultPolicy" class="org.riotfamily.riot.security.policy.GrantAllPolicy" />

	<bean id="freemarkerConfig" class="org.riotfamily.common.web.view.freemarker.RiotFreeMarkerConfigurer">
		<property name="templateLoaders">
			<list>
				<bean class="org.riotfamily.common.web.view.freemarker.ResourceTemplateLoader" />
			</list>
		</property>
		<property name="macroLibraries">
			<props>
				<prop key="riot">classpath:org/riotfamily/riot/runtime/macro/riot.ftl</prop>
			</props>
		</property>
		<property name="freemarkerSettings">
			<props>
				<prop key="number_format">#0.#</prop>
			</props>
        </property>
		<property name="freemarkerVariables">
			<map>
        		<entry key="customStyleSheets" value-ref="customStyleSheets" />
			</map>
		</property>
	</bean>
	
	<util:list id="customStyleSheets">
		<value>style/command.css</value>
		<value>style/command-custom.css</value>
	</util:list>
	
	<bean id="riotMacroHelper" class="org.riotfamily.riot.runtime.macro.RiotMacroHelperFactory">
		<constructor-arg ref="riotRuntime" />
	</bean>

	<bean id="viewResolver" class="org.riotfamily.common.web.view.freemarker.RiotFreeMarkerViewResolver">
		<property name="viewClass" value="org.riotfamily.common.web.view.freemarker.RiotFreeMarkerView" />
		<property name="cache" value="true" />
    </bean>

	<!-- Core list commands -->

	<bean id="editCommand" class="org.riotfamily.riot.list.command.core.EditCommand" />

	<bean id="addCommand" class="org.riotfamily.riot.list.command.core.EditCommand" />

	<bean id="viewCommand" class="org.riotfamily.riot.list.command.core.EditCommand" />

	<bean id="deleteCommand" class="org.riotfamily.riot.list.command.core.DeleteCommand" />
	
	<bean id="refreshCommand" class="org.riotfamily.riot.list.command.core.RefreshCommand" />

	<bean id="stepIntoCommand" class="org.riotfamily.riot.list.command.core.StepIntoCommand" />

	<bean id="moveUpCommand" class="org.riotfamily.riot.list.command.core.SwapCommand">
		<property name="swapWith" value="-1" />
	</bean>

	<bean id="moveDownCommand" class="org.riotfamily.riot.list.command.core.SwapCommand">
		<property name="swapWith" value="1" />
	</bean>

	<bean id="cutCommand" class="org.riotfamily.riot.list.command.core.CutCommand" />

	<bean id="copyCommand" class="org.riotfamily.riot.list.command.core.CopyCommand" />

	<bean id="pasteCommand" class="org.riotfamily.riot.list.command.core.PasteCommand" />
	
	<bean id="previewCommand" class="org.riotfamily.riot.list.command.core.PreviewCommand" />
	
	<bean id="publishCommand" class="org.riotfamily.riot.list.command.core.PublishCommand" />

	<!-- Alternative renderers -->

	<bean id="imageRenderer" class="org.riotfamily.common.web.ui.ImageRenderer" />

	<bean id="mediumDateRenderer" class="org.riotfamily.common.web.ui.DateRenderer" />

	<bean id="localeRenderer" class="org.riotfamily.common.web.ui.LocaleRenderer" />

	<bean id="cssClassRenderer" class="org.riotfamily.riot.ui.CssClassRenderer" />

	<bean id="countryFlagRenderer" class="org.riotfamily.riot.ui.CountryFlagRenderer" />

	<!-- Repositories -->

	<bean id="listRepository" class="org.riotfamily.riot.list.xml.XmlListRepository">
		<property name="priorityConfigLocations">
			<value>/WEB-INF/riot-config/lists.xml</value>
		</property>
		<property name="riotDaoService" ref="riotDaoService" />
	</bean>

	<util:map id="customFormElements">
		<entry key="{http://www.riotfamily.org/schema/riot/form-elements}chooser"
				value="org.riotfamily.riot.form.element.ObjectChooser" />
		<entry key="{http://www.riotfamily.org/schema/riot/form-elements}restricted"
						value="org.riotfamily.riot.form.element.RestrictedElement" />				
	</util:map>

	<util:map id="defaultTinyMCEConfig">
		<entry key="gecko_spellcheck">
			<value type="java.lang.Boolean">true</value>
		</entry>		
		<entry key="valid_elements" value="+a[href|target|name],-strong/b,-em/i,h3/h2/h1,h4/h5/h6,p,br,hr,ul,ol,li,blockquote,sub,sup,span[class&lt;mailto]" />
		<entry key="theme_advanced_container_buttons1" value="bold,italic,sup,bullist,numlist,outdent,indent,hr,link,unlink,anchor,code,undo,redo,charmap" />
		<entry key="forced_root_block" value="p" />
		<entry key="entity_encoding" value="raw" />
	</util:map>
	
	<util:map id="tinyMCEProfiles">
		<entry key="default" value-ref="defaultTinyMCEConfig" />
	</util:map>
	
	<bean id="formRepository" class="org.riotfamily.forms.factory.xml.XmlFormRepository">
		<property name="priorityConfigLocations">
			<list>
				<value>/WEB-INF/riot-config/forms.xml</value>
			</list>
		</property>
		<property name="mimetypesMap" ref="fileTypeMap" />
		<property name="tinyMCEProfiles" ref="tinyMCEProfiles" />
		<property name="customElements" ref="customFormElements" />
	</bean>

	<bean id="riotDaoOptionValuesAdapter" class="org.riotfamily.riot.form.options.RiotDaoOptionsModelFactory" />

	<bean id="imageCropper" class="org.riotfamily.common.image.ImageMagickCropper">
		<constructor-arg ref="imageMagick" />
	</bean>

	<bean id="editorRepository" class="org.riotfamily.riot.editor.xml.XmlEditorRepository">
		<property name="priorityConfigLocations">
			<list>
				<value>/WEB-INF/riot-config/editors.xml</value>
			</list>
		</property>
		<property name="listRepository" ref="listRepository" />
		<property name="formRepository" ref="formRepository" />
		<property name="messageCodesResolver" ref="messageCodesResolver" />
	</bean>

	<bean id="handlerMapping" class="org.riotfamily.common.web.mapping.AdvancedBeanNameHandlerMapping">
		<property name="interceptors">
			<list>
				<ref bean="loginInterceptor" />
				<bean class="org.riotfamily.common.web.transaction.TransactionalHandlerInterceptor">
					<constructor-arg ref="transactionManager" />
				</bean>
			</list>
		</property>
	</bean>
		
	<!-- Controllers -->

	<!--
	  - MVC controller that displays the login form and passes the user input
	  - to the LoginManager.
	  -->
	<bean id="loginFormController" name="/login" class="org.riotfamily.riot.security.ui.LoginFormController">
		<constructor-arg ref="loginManager" />
		<property name="viewName" value="classpath:org/riotfamily/riot/security/ui/LoginFormView.ftl" />
	</bean>

	<!--
	  - MVC controller that displays the bottom status frame containing
	  - login information.
	  -->
	<bean id="statusbarController" name="/statusbar" class="org.riotfamily.riot.security.ui.LoginStatusController" />

	<!-- Controller that keeps the HTTP session alive -->
	<bean name="/ping" class="org.riotfamily.common.web.controller.SessionKeepAliveController" />

	<!--
	  - Controller that performs a logout.
	  -->
	<bean id="logoutController" name="/logout" class="org.riotfamily.riot.security.ui.LogoutController" />

	<util:map id="cssProperties">
		<entry key="highlight_color" value="#cb0038" />
		<entry key="title_bg_color" value="#3d3d3d" />
		<entry key="label_color" value="#3d3d3d" />
		<entry key="error_color" value="#cb0038" />
		<entry key="toolbar_border_color" value="#3d3d3d" />
		<entry key="resourcePath" value-ref="riotResourcePath" />
	</util:map>

	<util:list id="resourceFilters">
		<bean class="org.riotfamily.riot.resource.PropertyResourceFilter">
			<property name="match" value="/**/*.css" />
			<property name="properties" ref="cssProperties" />
		</bean>
		<bean class="org.riotfamily.riot.resource.PropertyResourceFilter">
			<property name="match" value="/**/frameset.js" />
			<property name="properties">
				<map>
					<entry key="riotServletPrefix" value-ref="riotServletPrefix" />
				</map>
			</property>
		</bean>
	</util:list>
	
	<util:list id="resourceMappings">
		<!-- Allow styles to be overwritten in WEB-INF/style -->
		<bean class="org.riotfamily.riot.resource.ResourceMapping">
			<property name="path" value="/style/" />
			<property name="location" value="/WEB-INF/riot-config/style/" />
		</bean>
		<!-- Allow any resource to be overwritten in WEB-INF/resources -->
		<bean class="org.riotfamily.riot.resource.ResourceMapping">
			<property name="path" value="/" />
			<property name="location" value="/WEB-INF/riot-config/resources/" />
		</bean>
		<!-- Riot resources -->
		<bean class="org.riotfamily.riot.resource.ResourceMapping">
			<property name="path" value="/" />
			<property name="location" value="classpath:/org/riotfamily/riot/runtime/resources/" />
		</bean>
		<!-- Resources from the jslib jars -->
		<bean class="org.riotfamily.riot.resource.ResourceMapping">
			<property name="path" value="/" />
			<property name="location" value="classpath:/org/riotfamily/resources/" />
		</bean>
		<!-- Form resources -->
		<bean class="org.riotfamily.riot.resource.ResourceMapping">
			<property name="path" value="/form/" />
			<property name="location" value="classpath:/org/riotfamily/forms/runtime/resources/" />
		</bean>
	</util:list>
	
	<bean name="/resources/*/@{resource*}" class="org.riotfamily.riot.resource.ResourceController">
		<property name="pathAttribute" value="resource" />
		<property name="fileTypeMap" ref="fileTypeMap" />
		<property name="checkForModifications" value="${riot.resources.reloadable=false}" />
		<property name="filters" ref="resourceFilters" />
		<property name="mappings" ref="resourceMappings" />
		<property name="compressors">
			<map>
				<entry key="text/css">
					<bean class="org.riotfamily.common.web.compressor.YUICssCompressor">
						<property name="enabled" value="${riot.resources.compress=true}" />
					</bean>
				</entry>
				<entry key="text/javascript">
					<bean class="org.riotfamily.common.web.compressor.YUIJavaScriptCompressor">
						<property name="enabled" value="${riot.resources.compress=true}" />
					</bean>					
				</entry>
			</map>
		</property>
	</bean>
	
	<bean name="/joined/*/joined-script.js" class="org.riotfamily.riot.resource.JoiningResourceController">
		<property name="pathParameter" value="files" />
		<property name="fileTypeMap" ref="fileTypeMap" />
		<property name="checkForModifications" value="${riot.resources.reloadable=false}" />
		<property name="filters" ref="resourceFilters" />
		<property name="mappings" ref="resourceMappings" />
		<property name="contentType" value="text/javascript" />
		<property name="compressor">
			<bean class="org.riotfamily.common.web.compressor.YUIJavaScriptCompressor">
				<property name="enabled" value="${riot.resources.compress=true}" />
				<property name="linebreak" value="1000" />
			</bean>
		</property>
	</bean>
	
	<bean name="/joined/*/joined-style.js" class="org.riotfamily.riot.resource.JoiningResourceController">
		<property name="pathParameter" value="files" />
		<property name="fileTypeMap" ref="fileTypeMap" />
		<property name="checkForModifications" value="${riot.resources.reloadable=false}" />
		<property name="filters" ref="resourceFilters" />
		<property name="mappings" ref="resourceMappings" />
		<property name="contentType" value="text/css" />
		<property name="compressor">
			<bean class="org.riotfamily.common.web.compressor.YUICssCompressor">
				<property name="enabled" value="${riot.resources.compress=true}" />
			</bean>			
		</property>
	</bean>

	<bean id="groupController" class="org.riotfamily.riot.editor.ui.EditorGroupController">
		<constructor-arg ref="editorRepository" />
	</bean>
	<alias name="groupController" alias="/group" />
	<alias name="groupController" alias="/group/@{editorId}" />

	<bean id="editorFramesetController" name="/" class="org.riotfamily.riot.editor.ui.FrameSetController" />	

	<bean id="pathController" name="/path" class="org.riotfamily.riot.editor.ui.PathController">
		<constructor-arg ref="editorRepository" />
	</bean>
	
	<bean id="chooserPathController" class="org.riotfamily.riot.form.element.ChooserPathController">
		<constructor-arg ref="editorRepository" />
	</bean>
	<alias name="chooserPathController" alias="/chooser-path/@{targetEditorId}" />
	<alias name="chooserPathController" alias="/chooser-path/@{targetEditorId}/@{rootEditorId}" />
	<alias name="chooserPathController" alias="/chooser-path/@{targetEditorId}/@{rootEditorId}/@{rootId}" />

	<bean id="formContextFactory" class="org.riotfamily.forms.controller.FormContextFactory">
		<property name="messageCodesResolver" ref="messageCodesResolver" />
		<property name="resourcePath" ref="riotResourcePath" />
	</bean>

	<bean id="listController" class="org.riotfamily.riot.list.ui.ListController">
		<property name="listService" ref="listService" />
	</bean>

	<alias name="listController" alias="/list/@{editorId}" />
	<alias name="listController" alias="/list/@{editorId}/@{parentId}" />

	<bean id="listService" class="org.riotfamily.riot.list.ui.ListServiceImpl">
		<property name="editorRepository" ref="editorRepository" />
		<property name="messageCodesResolver" ref="messageCodesResolver" />
		<property name="formContextFactory" ref="formContextFactory" />
		<property name="transactionManager" ref="transactionManager" />
	</bean>

	<bean id="formController" class="org.riotfamily.riot.form.ui.FormController">
		<constructor-arg ref="editorRepository" />
		<constructor-arg ref="formRepository" />
		<constructor-arg ref="transactionManager" />
		<constructor-arg ref="listService" />
		<property name="formContextFactory" ref="formContextFactory" />
	</bean>
	<alias name="formController" alias="/form/@{editorId}" />
	<alias name="formController" alias="/form/@{editorId}/@{objectId}" />

	<bean id="formChooserController" class="org.riotfamily.riot.form.ui.FormChooserController">
		<constructor-arg ref="editorRepository" />
		<constructor-arg ref="formRepository" />
		<constructor-arg ref="transactionManager" />
		<constructor-arg ref="listService" />
		<property name="formContextFactory" ref="formContextFactory" />
	</bean>
	<alias name="formChooserController" alias="/form-chooser/@{editorId}" />
	
	<bean id="viewController" class="org.riotfamily.riot.editor.ui.ViewController">
		<constructor-arg ref="editorRepository" />
		<constructor-arg ref="listService" />
	</bean>
	<alias name="viewController" alias="/view/@{editorId}" />
	<alias name="viewController" alias="/view/@{editorId}/@{objectId}" />

	<bean id="customEditorController"
		name="/custom/@{editorId}"
		class="org.riotfamily.riot.editor.ui.CustomEditorController">
		<constructor-arg ref="editorRepository" />
	</bean>

	<bean id="commandDialogController"
		name="/dialog/@{commandId}"
		class="org.riotfamily.riot.list.command.dialog.ui.DialogFormController">
		<constructor-arg ref="listRepository" />		
		<constructor-arg ref="transactionManager" />
		<property name="formContextFactory" ref="formContextFactory" />
	</bean>
	
	<bean name="/changePassword" id="changePasswordController" class="org.riotfamily.riot.security.ui.ChangePasswordController">		
		<constructor-arg ref="riotUserDao" />
		<constructor-arg ref="transactionManager" />
		<property name="formContextFactory" ref="formContextFactory" />
	</bean>

	<bean id="messageCodeRevelationController" name="/toggle-i18n" class="org.riotfamily.common.i18n.MessageCodeRevelationController" />

	<bean id="statusController" name="/status" class="org.riotfamily.riot.status.StatusController" />

	<bean id="exportController" name="/export/@{listSessionKey}/@{commandId}" class="org.riotfamily.riot.list.command.export.ExportController" />

	<bean id="org.directwebremoting.PageNormalizer"
		class="org.riotfamily.common.web.dwr.NoOpPageNormalizer" />

	<!--
	<bean id="org.directwebremoting.Remoter"
		class="org.riotfamily.common.web.dwr.ConstantsRemoter" />
	-->

	<!--
	  - Controller that exposes DWR services.
	  -->
	
	<bean id="riotDwrConfigurator" class="org.riotfamily.common.web.dwr.SpringConfigurator">
		<property name="converters">
			<map>
				<entry key="java.lang.Exception">
					<bean class="org.directwebremoting.convert.ExceptionConverter">
						<property name="include" value="message,lineNumber" />
					</bean>
				</entry>
			</map>
		</property>
		<property name="converterTypes">
			<props>
				<prop key="org.riotfamily.riot.list.ui.*">bean</prop>
				<prop key="org.riotfamily.riot.list.command.*">bean</prop>
			</props>
		</property>
		<property name="serviceBeans">
			<map>
				<entry key="ListService" value-ref="listService" />
			</map>
		</property>
		<property name="serviceInterfaces">
			<list>
				<value>org.riotfamily.riot.list.ui.ListService</value>
			</list>
		</property>
		<property name="signatures">
			<value>
				import org.riotfamily.riot.list.ui.ListItem;
				import org.riotfamily.riot.list.command.CommandState;
				import java.util.List;
				import javax.servlet.http.HttpServletRequest;
				ListItem.setColumns(List&lt;String&gt;);
				ListItem.setCommands(List&lt;CommandState&gt;);
				ListService.filter(String, Map&lt;String, List&gt;, HttpServletRequest);
				ListService.execBatchCommand(String, List&lt;ListItem&gt;, CommandState, boolean, HttpServletRequest, HttpServletResponse);
			</value>
		</property>
	</bean>
				
	<bean id="dwrController"
		name="/resources/*/dwr/**"
		class="org.riotfamily.common.web.dwr.DwrController">
		<property name="mapping" value="dwr" />
		<property name="parameters">
			<props>
				<prop key="pollAndCometEnabled">true</prop>
				<prop key="maxWaitAfterWrite">${riot.dwr.maxWaitAfterWrite=-1}</prop>
				<prop key="crossDomainSessionSecurity">false</prop>
			</props>
		</property>
		<property name="configurators">
			<list>
				<ref bean="riotDwrConfigurator" />
			</list>
		</property>
	</bean>

	<bean id="startupTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="name" value="startup" />
		<property name="repeatCount" value="0" />
		<property name="startDelay" value="0" />
	</bean>
	
	<bean id="dailyTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="name" value="daily" />
		<property name="cronExpression" value="0 0 3 * * ?" />
	</bean>
	
	<bean id="hourlyTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="name" value="hourly" />
		<property name="cronExpression" value="0 0 * * * ?" />
	</bean>	
	
	<bean id="riotTaskScheduler" class="org.riotfamily.common.scheduling.ScheduledTaskSchedulerFactoryBean" />

</beans>