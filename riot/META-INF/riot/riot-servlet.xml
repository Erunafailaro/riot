<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
		http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util-2.5.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

	<description>
		Riot servlet (Riot Core)
	</description>
	
    <util:list id="messageBasenames">
    	<value>/WEB-INF/i18n/messages</value>
    	<value>/WEB-INF/riot-config/messages</value>
		<value>classpath:/org/riotfamily/riot/runtime/i18n/messages</value>
	</util:list>
	
	<bean id="messageSource" name="riotMessageSource" class="org.riotfamily.common.i18n.CodeRevealingMessageSource">
		<property name="parentMessageSource">
			<bean class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
				<property name="defaultEncoding" value="UTF-8" />
				<property name="fallbackToSystemLocale" value="false" />
				<property name="cacheSeconds" value="1" />
		        <property name="basenames" ref="messageBasenames" />
		    </bean>
		</property>
	</bean>

	<bean id="messageCodesResolver" class="org.riotfamily.common.i18n.RiotMessageCodesResolver" />

	<util:list id="customStyleSheets">
		<value>style/command.css</value>
		<value>style/command-custom.css</value>
	</util:list>
	
	<!-- Alternative renderers -->

	<bean id="imageRenderer" class="org.riotfamily.common.web.ui.ImageRenderer" />

	<bean id="mediumDateRenderer" class="org.riotfamily.common.web.ui.DateRenderer" />
	
	<bean id="dateTimeRenderer" class="org.riotfamily.common.web.ui.DateRenderer">
		<property name="pattern" value="dd.MM.yy HH:mm:ss" />
	</bean>

	<bean id="localeRenderer" class="org.riotfamily.common.web.ui.LocaleRenderer" />

	<bean id="cssClassRenderer" class="org.riotfamily.riot.ui.CssClassRenderer" />

	<bean id="countryFlagRenderer" class="org.riotfamily.riot.ui.CountryFlagRenderer">
		<constructor-arg ref="resourcePath" />
	</bean>

	<bean id="riotDaoOptionValuesAdapter" class="org.riotfamily.riot.form.options.RiotDaoOptionsModelFactory" />

	<bean id="imageCropper" class="org.riotfamily.common.image.ImageMagickCropper">
		<constructor-arg ref="imageMagick" />
	</bean>
		
	<!-- Controllers -->

	<util:map id="cssProperties">
		<entry key="highlight_color" value="#cb0038" />
		<entry key="title_bg_color" value="#3d3d3d" />
		<entry key="label_color" value="#3d3d3d" />
		<entry key="error_color" value="#cb0038" />
		<entry key="toolbar_border_color" value="#3d3d3d" />
		<entry key="resourcePath" value-ref="resourcePath" />
	</util:map>

	<bean name="/joined/*/joined-script.js" class="org.riotfamily.core.resource.JoiningResourceController">
		<property name="pathParameter" value="files" />
		<property name="fileTypeMap" ref="fileTypeMap" />
		<property name="checkForModifications" value="${riot.resources.reloadable=false}" />
		<property name="filters" ref="resourceFilters" />
		<property name="mappings" ref="resourceMappings" />
		<property name="contentType" value="text/javascript" />
		<property name="compressor">
			<bean class="org.riotfamily.common.web.compressor.YUIJavaScriptCompressor">
				<property name="enabled" value="${riot.resources.compress=true}" />
				<property name="linebreak" value="1000" />
			</bean>
		</property>
	</bean>
	
	<bean name="/joined/*/joined-style.js" class="org.riotfamily.core.resource.JoiningResourceController">
		<property name="pathParameter" value="files" />
		<property name="fileTypeMap" ref="fileTypeMap" />
		<property name="checkForModifications" value="${riot.resources.reloadable=false}" />
		<property name="filters" ref="resourceFilters" />
		<property name="mappings" ref="resourceMappings" />
		<property name="contentType" value="text/css" />
		<property name="compressor">
			<bean class="org.riotfamily.common.web.compressor.YUICssCompressor">
				<property name="enabled" value="${riot.resources.compress=true}" />
			</bean>			
		</property>
	</bean>

	<bean id="formContextFactory" class="org.riotfamily.forms.controller.FormContextFactory">
		<property name="messageCodesResolver" ref="messageCodesResolver" />
		<property name="resourcePath" ref="resourcePath" />
	</bean>

	<bean id="messageCodeRevelationController" name="/toggle-i18n" class="org.riotfamily.common.i18n.MessageCodeRevelationController" />

	<bean id="statusController" name="/status" class="org.riotfamily.riot.status.StatusController" />

	<!-- 
	<bean id="exportController" name="/export/@{listSessionKey}/@{commandId}" class="org.riotfamily.riot.list.command.export.ExportController" />
	<alias alias="/export/@{listSessionKey}/@{commandId}/@{objectId}" name="exportController"/>
 	-->
 
	<!--
	<bean id="org.directwebremoting.PageNormalizer"
		class="org.riotfamily.common.web.dwr.NoOpPageNormalizer" />

	<bean id="riotDwrConfigurator" class="org.riotfamily.common.web.dwr.SpringConfigurator">
		<property name="converters">
			<map>
				<entry key="org.riotfamily.core.security.PermissionDeniedException">
					<bean class="org.directwebremoting.convert.ExceptionConverter">
						<property name="include" value="message,permissionRequestUrl" />
					</bean>
				</entry>
				<entry key="java.lang.Exception">
					<bean class="org.directwebremoting.convert.ExceptionConverter">
						<property name="include" value="message" />
					</bean>
				</entry>
			</map>
		</property>
		<property name="converterTypes">
			<props>
				<prop key="org.riotfamily.riot.list.ui.*">bean</prop>
				<prop key="org.riotfamily.riot.list.command.*">bean</prop>
			</props>
		</property>
		<property name="serviceBeans">
			<map>
				<entry key="ListService" value-ref="listService" />
			</map>
		</property>
		<property name="serviceInterfaces">
			<list>
				<value>org.riotfamily.riot.list.ui.ListService</value>
			</list>
		</property>
		<property name="signatures">
			<value>
				import org.riotfamily.riot.list.ui.ListItem;
				import org.riotfamily.riot.list.ui.CommandState;
				import java.util.List;
				import javax.servlet.http.HttpServletRequest;
				import javax.servlet.http.HttpServletResponse;
				ListItem.setColumns(List&lt;String&gt;);
				ListItem.setCommands(List&lt;CommandState&gt;);
				ListService.filter(String, Map&lt;String, List&gt;, HttpServletRequest);
				ListService.execCommand(String, List&lt;ListItem&gt;, String, boolean, HttpServletRequest, HttpServletResponse);
			</value>
		</property>
	</bean>
				
	<bean id="dwrController"
		name="/resources/*/dwr/**"
		class="org.riotfamily.common.web.dwr.DwrController">
		<description>
			Controller that exposes DWR services.		
		</description>
		<property name="mapping" value="dwr" />
		<property name="parameters">
			<props>
				<prop key="pollAndCometEnabled">true</prop>
				<prop key="maxWaitAfterWrite">${riot.dwr.maxWaitAfterWrite=-1}</prop>
				<prop key="crossDomainSessionSecurity">false</prop>
			</props>
		</property>
		<property name="configurators">
			<list>
				<ref bean="riotDwrConfigurator" />
			</list>
		</property>
	</bean>
 	-->
 	
	<bean id="startupTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<description>
			Quartz trigger that fires at startup.
		</description>
		<property name="name" value="startup" />
		<property name="repeatCount" value="0" />
		<property name="startDelay" value="0" />
	</bean>
	
	<bean id="dailyTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<description>
			Quartz trigger that fires once a day at 3:00 AM.
		</description>
		<property name="name" value="daily" />
		<property name="cronExpression" value="0 0 3 * * ?" />
	</bean>
	
	<bean id="hourlyTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<description>
			Quartz trigger that fires every hour.
		</description>
		<property name="name" value="hourly" />
		<property name="cronExpression" value="0 0 * * * ?" />
	</bean>	
	
	<bean id="riotTaskScheduler" class="org.riotfamily.common.scheduling.ScheduledTaskSchedulerFactoryBean" />

</beans>