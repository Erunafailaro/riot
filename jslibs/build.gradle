subprojects {
	// Nothing to compile
	compileJava.enabled = false
	compileTestJava.enabled = false
	
	// Add -js suffix to archive names
	// Doesn't work with MavenDeployer as suffix is also added to module names 
	//archivesBaseName = name + '-js'
	
	// Add a task to unpack source archives
	task unpack << {
		fileTree(it.project.projectDir).include('*.zip').files.each{
			ant.unzip(src: it, dest: destinationDir)
		}
	}
	unpack {
		destinationDir = file("$buildDir/unpack")
		onlyIf{ task ->
			!isUpToDate(fileTree(dir: destinationDir), fileTree(dir: task.project.projectDir))
		}
	}
	
	processResources {
		baseDirInDist = ''
		subPackage = project.name
		dependsOn(unpack)
	}
	afterEvaluate {
		processResources {
			from "$projectDir/src"
			from "$unpack.destinationDir/$baseDirInDist"
			into "$sourceSets.main.classesDir/org/riotfamily/resources/$subPackage"
		}
	}
	
	// Delete the unpack dir upon cleanup
	clean << { task ->
		ant.delete(dir: task.project.unpack.destinationDir)
	}
}

boolean isUpToDate(FileCollection dest, FileCollection src) {
	destDate = dest.collect{ it.lastModified() }.max()
	srcDate = src.collect{ it.lastModified() }.max()
	destDate != null && destDate >= srcDate
}