<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Service bean to edit components. Exposed via DWR.  -->
	<bean id="componentEditor" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="interceptorNames"><value>matchAllTxInterceptor</value></property>
		<property name="target"><ref bean="componentEditorTarget" /></property>
	</bean>

	<bean id="componentEditorTarget" class="org.riotfamily.pages.component.editor.ComponentEditorImpl">
		<constructor-arg ref="componentDao" />
		<property name="loginManager" ref="loginManager" />
	</bean>
	
	<!-- 
	  - FormRepository providing component property forms.
	  -->
	<bean id="componentFormRepository" class="org.riotfamily.forms.factory.xml.XmlFormRepository">
		<property name="config" value="/WEB-INF/pages-config/component-forms.xml" />
		<property name="customElements" ref="customFormElements" />
		<property name="defaultBeanClass" value="java.util.HashMap" />
	</bean>
	
	<!-- 
	  - Controller that renders forms to edit component properties.
	  -->		
	<bean id="componentFormController" 
		name="/pages/form/@{componentId}"
		class="org.riotfamily.pages.component.editor.ComponentFormController">
		<constructor-arg ref="componentDao" />
		<constructor-arg ref="componentFormRepository" />
		<constructor-arg ref="transactionManager" />
		<property name="formContextFactory" ref="formContextFactory" />
	</bean>

	<!--
	  - Overwrites the default loginFormController to use another view. 
	  - The view includes a box with istallation instructions for the 
	  - Riot-login bookmarklet.
	  -->	
	<bean id="loginFormController" name="/login" class="org.riotfamily.riot.security.ui.LoginFormController">
		<constructor-arg ref="loginManager" />
		<property name="viewName" value="classpath:/org/riotfamily/pages/runtime/view/login-form.ftl" />
	</bean>
	
	<!-- 
	  - Login-popup that is opend by the Riot-login bookmarklet.
	  -->
	<bean id="toolbarLoginFormController" 
		name="/pages/login"
		class="org.riotfamily.riot.security.ui.LoginFormController">
		<constructor-arg ref="loginManager" />
		<property name="successViewName" value="classpath:/org/riotfamily/pages/runtime/view/toolbar-login-success.ftl" />
	</bean>
	
	<!-- 
	  - Controller that displays the sitemap as DHTML tree. Used by the 
	  - internalLink form element.
	  -->
	<bean id="pageChooserController" name="/pages/chooser"
		class="org.riotfamily.pages.page.chooser.PageChooserController" />
	
	
	<!-- Module configuration -->
	
	<bean id="pagesModule" class="org.riotfamily.common.beans.module.FactoryBeanModule">
		<property name="properties">
			<map>
				<entry key="messageSourceBasenames">
					<list>
						<value>classpath:/org/riotfamily/pages/runtime/i18n/messages</value>
					</list>
				</entry>
				<entry key="publicUrls">
					<value>/pages/login</value>
				</entry>
				<entry key="resourceMappings">
					<list>
						<bean class="org.riotfamily.common.web.resource.ResourceMapping">
							<property name="path" value="/" />
							<property name="location" value="classpath:/org/riotfamily/pages/runtime/resources/" />
						</bean>
					</list>
				</entry>
				<entry key="resourceFilters">
					<list>
						<bean class="org.riotfamily.common.web.resource.PropertyResourceFilter">
							<property name="match" value="/**/pages.js" />
							<property name="propertiesMap">
								<map>
									<entry key="riotServletPrefix" value-ref="riotServletPrefix" />
								</map>
							</property>
						</bean>
						<bean class="org.riotfamily.common.web.resource.MessageResourceFilter">
							<property name="prefix" value="pages." />
							<property name="matches">
								<list>
									<value>/**/toolbar.js</value>
									<value>/**/inplace.js</value>
									<value>/**/component.js</value>
								</list>
							</property>
						</bean>
					</list>
				</entry>
				<entry key="customStyleSheets">
					<list>
						<value>riot-pages.css</value>
					</list>
				</entry>
				<entry key="customFormElements">
					<props>
						<prop key="internalLink">org.riotfamily.pages.page.chooser.InternalLinkField</prop>
					</props>
				</entry>
				<entry key="dwrConfigurators">
					<list>
						<bean class="org.riotfamily.common.web.dwr.SpringConfigurator">
							<property name="converterTypes">
								<props>
									<prop key="org.riotfamily.pages.component.editor.TypeInfo">bean</prop>
									<prop key="org.riotfamily.pages.component.editor.ComponentInfo">bean</prop>
								</props>
							</property>
							<property name="serviceBeans">
								<map>
									<entry key="ComponentEditor" value-ref="componentEditor" />
								</map>
							</property>
							<property name="serviceInterfaces">
								<list>
									<value>org.riotfamily.pages.component.editor.ComponentEditor</value>
								</list>
							</property>
						</bean>
					</list>
				</entry>
				<entry key="formConfigLocations">
					<value>classpath:/org/riotfamily/pages/runtime/riot-config.xml</value>
				</entry>
				<entry key="listConfigLocations">
					<value>classpath:/org/riotfamily/pages/runtime/riot-config.xml</value>
				</entry>
				<entry key="editorConfigLocations">
					<value>classpath:/org/riotfamily/pages/runtime/riot-config.xml</value>
				</entry>
			</map>			
		</property>
	</bean>
	
	<!-- 
	  - Security policy that limits the access to pages flaged as system page.
	  -->
	<bean id="systemPagePolicy" class="org.riotfamily.pages.page.support.SystemPagePolicy" />

	<bean id="pageLinkRenderer" class="org.riotfamily.riot.list.ui.render.LinkRenderer">
 		<property name="property" value="path" />
 		<property name="suffix" value=".html" />
 		<property name="target" value="pages" />
 		<property name="titleMessageKey" value="command.pageLink" />
 	</bean>
 	
 	<!-- 
 	  - RiotDao to access pages.
 	  -->
	<bean id="riotPageDao" class="org.riotfamily.pages.page.support.RiotPageDao">
		<constructor-arg ref="pageDao" />
		<constructor-arg ref="pageEventMulticaster" />
		<property name="componentDao" ref="componentDao" />
	</bean>
	
	<!-- 
	  - Command to publish or unpublish pages.
	  -->
	<bean id="publishPageCommand" class="org.riotfamily.pages.page.PublishPageCommand" />	

</beans>