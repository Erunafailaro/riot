<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util-2.0.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">
	
	<bean id="configurer" class="org.riotfamily.common.beans.config.PlaceholderWithDefaultConfigurer">
		<property name="location" value="classpath:/application.properties" />
		<property name="contextOverride" value="true" />
	</bean>
	
	<bean class="org.riotfamily.common.web.servlet.ReloadableDispatcherServletConfig">
		<property name="reloadable" value="${website-servlet.reloadable=false}" />
	</bean>
	
	<!-- 
	  - In-memory representation of the sitemap. 
	  -->
	<bean id="pageMap" class="org.riotfamily.pages.page.PageMap">
		<constructor-arg ref="pageDao" />
		<constructor-arg ref="transactionManager" />
		<property name="eventMulticaster" ref="pageEventMulticaster" />
	</bean>
	
	<!-- 
	  - MenuBuilder that creates MenuItems using the pageMap.
	  -->
	<bean id="pageMenuBuilder" class="org.riotfamily.pages.page.menu.PageMenuBuilder">
		<constructor-arg ref="pageMap"/>
	</bean>
	
	<bean id="pageInterceptor" class="org.riotfamily.pages.page.support.PageInterceptor">
		<constructor-arg ref="pageMap" />
		<constructor-arg ref="viewModeResolver" />
	</bean>
	
	<bean id="noCacheInterceptor" class="org.riotfamily.pages.util.NoCacheHeaderInterceptor">
		<property name="includes" value="**/*.html" />
	</bean>
	
	<!-- 
	  - Repository that contains the component definitions.
	  -->
	<bean id="componentRepository" class="org.riotfamily.pages.component.ComponentRepository">
		<property name="configLocations">
			<list>
				<value>classpath:/org/riotfamily/pages/runtime/component-messages.xml</value>
				<value>/WEB-INF/pages-config/components.xml</value>
			</list>
		</property>
		<property name="viewNamePrefix" value="components/" />
		<property name="viewNameSuffix" value=".ftl" />
	</bean>
	
	<!-- Component DAO -->
	
	<bean id="componentDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="interceptorNames"><value>matchAllTxInterceptor</value></property>
		<property name="target"><ref bean="componentDaoTarget" /></property>
	</bean>
		
	<bean id="componentDaoTarget" class="org.riotfamily.pages.component.dao.hibernate.HibernateComponentDao">
		<constructor-arg ref="componentRepository" />
		<constructor-arg ref="riotSessionFactory" />
	</bean>
		
	<!-- 
	  - Bean that is exposed to all beans in the riot-servlet context, that 
	  - implement the WebsiteConfigAware interface. Refer to the JavaDocs for
	  - a detailed explanation.
	  -->
	<bean class="org.riotfamily.pages.setup.WebsiteConfig">
		<constructor-arg ref="componentRepository" />
		<constructor-arg ref="componentDao" />
	</bean>	
	
	<!-- 
	  - Bean that checks whether a page should be displayed in preview- or
	  - live-mode.
	  -->
	<bean id="viewModeResolver" class="org.riotfamily.pages.component.preview.DefaultViewModeResolver" />
	
	<!-- 
	  - HandlerAdapter that handles CacheableControllers.
	  -->
	<bean id="cachiusHandlerAdapter" class="org.riotfamily.cachius.spring.CachiusHandlerAdapter">
		<constructor-arg ref="websiteCache" />
	</bean>
	
	<!-- 
	  - The default CachingPolicy used by AbstractCachingPolicyControllers.
	  -->
	<bean id="defaultCachingPolicy" class="org.riotfamily.pages.mvc.cache.DefaultCachingPolicy">
		<property name="expiresAfter" value="5m" />
		<property name="viewModeResolver" ref="viewModeResolver" />
	</bean>	
	
	  
	<bean class="org.riotfamily.pages.component.config.ControllerConfigurer">
		<property name="componentDao" ref="componentDao" />
		<property name="transactionManager" ref="transactionManager" />
		<property name="repository" ref="componentRepository" />
		<property name="cache" ref="websiteCache" />
		<property name="viewModeResolver" ref="viewModeResolver" />		
		<property name="componentPathResolver">
			<bean class="org.riotfamily.pages.component.resolver.PageComponentPathResolver" />
		</property>
	</bean>
	
	<bean id="folderFilterPlugin" class="org.riotfamily.pages.page.support.FolderFilterPlugin">
		<property name="filterName" value="website-servlet-filter" />
		<property name="ignoreFilterNotPresent" value="true" />
	</bean>
	
	<bean id="resourceStamper" class="org.riotfamily.common.web.filter.ResourceStamper" />

	<bean id="cssTemplateController" name="/**/*.css" 
			class="org.riotfamily.pages.css.CssTemplateController">
			
		<property name="addContextPathToUrls" value="true" />
		<property name="stamper" ref="resourceStamper" />
	</bean>
	
	<bean id="riotToolbarResources" class="org.riotfamily.common.beans.module.ModularListFactoryBean">
		<property name="key" value="riotToolbarResources" />
		<property name="sourceListFirst" value="true" />
		<property name="sourceList">
			<list>
				<value>/riot-js/resources.js</value>
				<value>/pages.js</value>
			</list>
		</property>
	</bean>
	
	<bean id="freemarkerConfig" class="org.riotfamily.common.web.view.freemarker.RiotFreeMarkerConfigurer">
		<property name="defaultEncoding" value="UTF-8" />
		<property name="templateLoaderPath" value="/WEB-INF/view" />
		<property name="freemarkerSettings" value="${website-servlet.freemarker.*}" />
		<property name="macroLibraries">
			<bean class="org.riotfamily.common.beans.module.ModularPropertiesFactoryBean">
				<property name="key" value="freemarkerMacroLibraries" />
				<property name="properties">
					<props>
						<prop key="riot">classpath:org/riotfamily/pages/freemarker/riot.ftl</prop>
					</props>
				</property>
			</bean>
		</property>
		<property name="freemarkerVariables">
			<bean class="org.riotfamily.common.beans.module.ModularMapFactoryBean">
				<property name="key" value="freemarkerVariables" />
				<property name="includeRootList" value="true" />
				<property name="sourceMap">
					<map>
						<entry key="riotServletPrefix" value-ref="riotServletPrefix" />
						<entry key="riotResourcePath" value-ref="riotResourcePath" />
						<entry key="viewModeResolver" value-ref="viewModeResolver" />
						<entry key="riotEncodeUrl"><bean class="org.riotfamily.common.web.view.freemarker.EncodeUrlMethod" /></entry>
						<entry key="riotInclude"><bean class="org.riotfamily.common.web.view.freemarker.IncludeMethod" /></entry>
						<entry key="riotToolbarResources" value-ref="riotToolbarResources" />
						<entry key="includeUriParam" value="__includeUri" />
					</map>
				</property>
			</bean>		
		</property>
	</bean>

</beans>
