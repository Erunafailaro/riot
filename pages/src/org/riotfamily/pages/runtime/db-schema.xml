<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:db="http://www.riotfamily.org/schema/revolt"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.riotfamily.org/schema/revolt
		http://www.riotfamily.org/schema/revolt/revolt.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">
	
	<db:history module="riot-pages" data-source="riotDataSource">
		<db:change-set id="initial">
			<db:create-table name="pages">
				<db:column name="id" type="BIGINT" not-null="true" primary-key="true" auto-increment="true" />
				<db:column name="parent" type="BIGINT" />
				<db:column name="path" type="VARCHAR" length="255" />
				<db:column name="pathComponent" type="VARCHAR" length="255" />
				<db:column name="`type`" type="VARCHAR" length="255" />
				<db:column name="`position`" type="INTEGER" />
		        <db:column name="title" type="VARCHAR" length="255" />
		        <db:column name="keywords" type="VARCHAR" length="255" />
		        <db:column name="description" type="VARCHAR" length="255" />
				<db:column name="hidden" type="BIT" />
				<db:column name="folder" type="BIT" />
				<db:column name="published" type="BIT" />
				<db:column name="everPublished" type="BIT" />
				<db:column name="systemPage" type="BIT" />
			</db:create-table>
			<db:add-foreign-key table="pages" name="pages_parent" references="pages">
				<db:ref local="parent" foreign="id" />
			</db:add-foreign-key>
	
			<db:create-table name="page_aliases">
				<db:column name="`path`" type="VARCHAR" length="255" not-null="true" primary-key="true" />
				<db:column name="page" type="BIGINT" />
			</db:create-table>
			<db:add-foreign-key table="page_aliases" name="page_aliases_page" references="pages">
				<db:ref local="page" foreign="id" />
			</db:add-foreign-key>

			<db:create-table name="component_lists">
				<db:column name="id" type="BIGINT" not-null="true" primary-key="true" auto-increment="true" />
				<db:column name="`path`" type="VARCHAR" length="255" />
				<db:column name="`key`" type="VARCHAR" length="255" />
				<db:column name="dirty" type="BIT" />
			</db:create-table>
	
			<db:create-table name="components">
				<db:column name="id" type="BIGINT" not-null="true" primary-key="true" auto-increment="true" />
				<db:column name="live_list" type="BIGINT" />
				<db:column name="live_pos" type="INTEGER" />
				<db:column name="preview_list" type="BIGINT" />
				<db:column name="preview_pos" type="INTEGER" />
				<db:column name="live_version" type="BIGINT" />
				<db:column name="preview_version" type="BIGINT" />
			</db:create-table>
			
			<db:add-foreign-key table="components" name="components_live_list" references="component_lists">
				<db:ref local="live_list" foreign="id" />
			</db:add-foreign-key>
			<db:add-foreign-key table="components" name="components_preview_list" references="component_lists">
				<db:ref local="preview_list" foreign="id" />
			</db:add-foreign-key>
				
			<db:create-table name="component_versions">
				<db:column name="id" type="BIGINT" not-null="true" primary-key="true" auto-increment="true" />
				<db:column name="`type`" type="VARCHAR" length="255" />
				<db:column name="dirty" type="BIT" />
			</db:create-table>
			
			<db:add-foreign-key table="components" name="components_live_version" references="component_versions">
				<db:ref local="live_version" foreign="id" />
			</db:add-foreign-key>
			<db:add-foreign-key table="components" name="components_preview_version" references="component_versions">
				<db:ref local="preview_version" foreign="id" />
			</db:add-foreign-key>
			
			<db:create-table name="component_properties">
				<db:column name="component_version" type="BIGINT" not-null="true" primary-key="true" />
				<db:column name="`key`" type="VARCHAR" length="255" not-null="true" primary-key="true" />
				<db:column name="elt" type="LONGVARCHAR" />
			</db:create-table>
		</db:change-set>
		<db:change-set id="uniqueComponentListKeys">
			<db:add-unique-constraint table="component_lists" name="component_list_key" on="`path`,`key`" />
		</db:change-set>
		<db:change-set id="componentMetaData">
			<db:add-column table="component_lists" name="lastModifiedBy" type="VARCHAR" length="255" />
			<db:add-column table="component_lists" name="lastModified" type="TIMESTAMP" />
		</db:change-set>
		<db:change-set id="versionToContainerReference">
			<db:add-column table="component_versions" name="container" type="BIGINT" />
			<db:add-foreign-key table="component_versions" name="component_versions_container" references="components">
				<db:ref local="container" foreign="id" />
			</db:add-foreign-key>
			<db:update-data>
				<db:statement 
					dialects="hsql,postgresql,postgresql8,mysql" 
					sql="update component_versions set container = (select id from components where live_version = component_versions.id or preview_version= component_versions.id)" />
			</db:update-data>
		</db:change-set>
		<db:change-set id="nestedComponentLists">
			<db:add-column table="component_lists" name="parent" type="BIGINT" />
			<db:update-data>
				<db:statement 
					dialects="postgresql,postgresql8" 
					sql="update component_lists set parent = cast(substring(key from position('$' in key) + 1) as numeric) where key like '%$%'" />
			</db:update-data>
			<db:add-foreign-key table="component_lists" name="component_lists_parent" references="components">
				<db:ref local="parent" foreign="id" />
			</db:add-foreign-key>
			<db:drop-unique-constraint table="component_lists" constraint="component_list_key" />
			<db:add-unique-constraint table="component_lists" name="component_list_key" on="`path`,`key`,parent" />
		</db:change-set>
	</db:history>
</beans>