<project name="common" default="usage" xmlns:ivy="antlib:org.apache.ivy.ant">

	<description>
		Build file to be included by all sub-projects (modules).
	</description>

	<property name="project.version" value="7.0" />

	<tstamp>
		<format property="build.date" pattern="yyyy-MM-dd" />
		<format property="publish.date" pattern="yyyyMMddHHmmss" />
	</tstamp>
	
	<property name="publish.status" value="integration" />
	
	<condition property="riot.revision" value="${project.version}-dev-${publish.date}">
		<equals arg1="${publish.status}" arg2="integration" />
	</condition>
	<property name="riot.revision" value="${project.version}" />
	
	<!--
	  - Revision pattern used in Ivy files to express Riot internal dependencies
	  -->
	<condition property="dep.riot.revision" value="${project.version}-dev-+">
		<equals arg1="${publish.status}" arg2="integration" />
	</condition>
	<property name="dep.riot.revision" value="${project.version}" />

	<!--
	  - Revisions of 3rd party libraries used by more than one module
	  -->
	<property name="dep.commons-logging.revision" value="1.1.1" />
	<property name="dep.spring.revision" value="2.5.1" />
	<property name="dep.quartz.revision" value="1.6.0" />
	<property name="dep.freemarker.revision" value="2.3.12" />
	
	<!-- Location of this buildfile -->
	<dirname property="root.dir" file="${ant.file.common}" />

	<!-- Globally shared directories -->
	<property name="lib.dir" value="${root.dir}/lib" />
	<property name="build.dir" value="${root.dir}/build" />
	<property name="build.modules.dir" value="${build.dir}/modules" />
	<property name="build.repo.dir" value="${build.dir}/repo" />
	<property name="build.tstamp" value="${build.dir}/.timestamp" />

	<property name="ivy.download" value="http://riotfamily.org/ivy/ivy-2.0.0-beta2.jar" />
	<property name="ivy.jar" value="${lib.dir}/ivy2.jar" />

	<taskdef resource="org/apache/ivy/ant/antlib.xml"
		uri="antlib:org.apache.ivy.ant" classpath="${ivy.jar}"
		onerror="ignore" />

	<!--
	  - The classpath. Contains all 3rd-party libraries and all
	  - module jar files.
	  -->
	<path id="classpath">
		<fileset dir="${lib.dir}">
			<include name="*.jar" />
		</fileset>
		<pathelement path="${java.class.path}" />
	</path>

	<target name="usage">
		<fail>This file is only intended for inclusion by other build files.</fail>
	</target>

	<!--
	  - Configures Ivy.
	  -->
	<target name="-configure-ivy" depends="-install-ivy" unless="ivy.configured">
		<available classname="com.jcraft.jsch.JSchException" property="ivysettings-default" value="${root.dir}/ivysettings-ssh.xml" />
		<property name="ivysettings-default" value="${root.dir}/ivysettings.xml" />

		<available file="${root.dir}/ivysettings-local.xml" property="ivysettings" value="${root.dir}/ivysettings-local.xml" />
		<property name="ivysettings" value="${ivysettings-default}" />

		<ivy:settings id="ivy.instance" file="${ivysettings}" override="true" />
		<property name="ivy.configured" value="true" />
	</target>

	<!--
	  - Installs Ivy (if needed).
	  -->
	<target name="-install-ivy" depends="-download-ivy" if="ivy.downloaded">
		<taskdef resource="org/apache/ivy/ant/antlib.xml"
			uri="antlib:org.apache.ivy.ant" classpath="${ivy.jar}" />
	</target>

	<!--
	  - Downloads the Ivy jar file from riotfamily.org.
	  -->
	<target name="-download-ivy" depends="-check-ivy" unless="ivy.available">
		<echo>This project uses Ivy (http://ant.apache.org/ivy/) to manage dependencies.</echo>
		<echo>Ivy was not found in the classpath the JAR file will now be downloaded ...</echo>
		<delete dir="${lib.dir}" />
		<mkdir dir="${lib.dir}" />
		<get src="${ivy.download}" dest="${ivy.jar}" verbose="true" />
		<property name="ivy.downloaded" value="true" />
	</target>

	<!--
	  - Checks whether Ivy is present in the lib dir.
	  -->
	<target name="-check-ivy">
		<available property="ivy.available" file="${ivy.jar}"/>
	</target>

</project>
