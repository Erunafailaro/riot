<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:override="http://www.riotfamily.org/schema/common/override"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.riotfamily.org/schema/common/override
		http://www.riotfamily.org/schema/common/override-8.0.xsd">

	<bean id="websiteCache" class="org.riotfamily.cachius.spring.CacheFactoryBean">
		<description>
			A Cachius cache instance to cache web content.		
		</description>
		<property name="cacheDir" value="${riot.websiteCache.cacheDir=}" />
		<property name="cacheDirName" value="website-cache" />
		<property name="capacity" value="${riot.websiteCache.capacity=10000}" />
		<property name="restore" value="${riot.websiteCache.restore=true}" />
		<property name="enabled" value="${riot.websiteCache.enabled=true}" />
    </bean>
	
	 <bean id="cacheService" class="org.riotfamily.cachius.CacheService">
	 	<description>
			A Cachius CacheService instance to cache and serve content.		
		</description>
        <constructor-arg ref="websiteCache" />
        <property name="checkInvolvedFiles" value="${riot.resources.reloadable=false}" />
        <property name="staleWhileRevalidate" value="${riot.websiteCache.staleWhileRevalidate=false}" />
        <property name="staleUnlessExpired" value="${riot.websiteCache.staleUnlessExpired=false}" />
    </bean>
    
    <bean id="resourceStamper" class="org.riotfamily.common.web.filter.ResourceStamper" />
    
    <override:add ref="hibernateInterceptors">
	    <bean class="org.riotfamily.riot.hibernate.cachius.CacheTagInterceptor">
	    	<description>
	    		EntityListener that invalidates tagged cache items whenever an 
	    		entity with @TagCacheItems annotation is modified or deleted.
	    	</description>
			<constructor-arg ref="cacheService" />
		</bean>
    </override:add>

</beans>