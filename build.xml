<project name="riotfamily" default="setup" xmlns:ivy="antlib:org.apache.ivy.ant">

	<import file="common.xml" />

	<property name="dist.zip.file" value="${build.dir}/riotfamily.zip" />

	<fileset id="module-build.files" dir=".">
		<include name="*/build.xml" />
		<exclude name="jslibs/*/build.xml" />
	</fileset>

	<fileset id="js-build.files" dir=".">
		<include name="jslibs/*/build.xml" />
	</fileset>

	<target name="-libs-available">
		<available property="skip-setup" file="${lib.dir}" type="dir" />
	</target>
	
	<target name="setup" depends="-libs-available" unless="skip-setup">
		<antcall target="resolve" />
	</target>
		
	<target name="resolve" depends="-configure-ivy">
		<ivy:buildlist reference="resolved-build.files">
			<fileset refid="module-build.files" />
		</ivy:buildlist>
		<subant target="resolve" buildpathref="resolved-build.files" />
	</target>
	
	<target name="retrieve-sources" depends="-configure-ivy">
		<ivy:buildlist reference="resolved-build.files">
			<fileset refid="module-build.files" />
		</ivy:buildlist>
		<subant target="retrieve-sources" buildpathref="resolved-build.files" />
	</target>

	<target name="jar" depends="-configure-ivy">
		<ivy:buildlist reference="resolved-build.files">
			<fileset refid="module-build.files" />
		</ivy:buildlist>
		<subant target="publish-build" buildpathref="resolved-build.files" />
	</target>

	<target name="js-jar" depends="-configure-ivy">
		<ivy:buildlist reference="resolved-build.files">
			<fileset refid="js-build.files" />
		</ivy:buildlist>
		<subant target="publish-build" buildpathref="resolved-build.files" />
	</target>

	<target name="install" depends="-configure-ivy">
		<ivy:buildlist reference="resolved-build.files">
			<fileset refid="js-build.files" />
			<fileset refid="module-build.files" />
		</ivy:buildlist>
		<subant target="install-if-modified" buildpathref="resolved-build.files" />
	</target>
	
	<target name="install-release" depends="-configure-ivy">
		<ivy:buildlist reference="resolved-build.files">
			<fileset refid="js-build.files" />
			<fileset refid="module-build.files" />
		</ivy:buildlist>
		<subant target="install" buildpathref="resolved-build.files">
			<property name="publish.status" value="release" />
		</subant>
	</target>
	
	<target name="publish-schemas">
		<subant target="collect-xml-schemas">
			<fileset refid="module-build.files" />
		</subant>
		<scp todir="${user.name}@riotfamily.org:/var/www/riotfamily.org/www/htdocs/schema" keyfile="${user.home}/.ssh/id_rsa" passphrase="" trust="true" sftp="true">
			<fileset dir="${build.dir}/schema" />
		</scp>
	</target>

	<target name="mirror-repository" depends="-configure-ivy">
		<ivy:install from="riotfamily" to="local" organisation=".*" module=".*" revision=".*" matcher="regexp" />
	</target>

	<target name="report" depends="-configure-ivy">
		<ivy:buildlist reference="resolved-build.files">
			<fileset refid="module-build.files" />
		</ivy:buildlist>
		<subant target="report" buildpathref="resolved-build.files" />
	</target>

	<target name="javadoc">
		<javadoc destdir="${build.dir}/docs/api" classpathref="classpath" breakiterator="true">
			<packageset dir="common/src" />
			<packageset dir="cachius/src" />
			<packageset dir="content/src" />
			<packageset dir="forms/src" />
			<packageset dir="core/src" />
			<packageset dir="media/src" />

			<group title="Common" packages="org.riotfamily.common*" />
			<group title="Cachius" packages="org.riotfamily.cachius*" />
			<group title="Forms" packages="org.riotfamily.forms*" />
			<group title="Core" packages="org.riotfamily.core*" />
			<group title="Content" packages="org.riotfamily.components*:org.riotfamily.pages*" />
			<group title="Media" packages="org.riotfamily.media*" />

			<link href="http://java.sun.com/j2ee/1.4/docs/api" />
			<link href="http://java.sun.com/j2se/1.4.2/docs/api" />
			<link href="http://static.springframework.org/spring/docs/2.0.x/api" />
		</javadoc>
	</target>
	
	<target name="fmdoc" depends="-configure-ivy">
		<ivy:retrieve organisation="riotfamily" module="fmdoc" revision="1.0" inline="true" log="quiet" pattern="${lib.dir}/[artifact].[ext]" />
		<taskdef name="fmdoc" classpathref="classpath" classname="org.riotfamily.fmdoc.ant.FreeMarkerDocTask" />
		<fmdoc destdir="${build.dir}/docs/fm">
			<fileset dir=".">
        		<include name="*/src/**/*.ftl" />		
        	</fileset>
		</fmdoc>
	</target>

	<target name="beandoc" depends="-configure-ivy">
		<ivy:retrieve organisation="springframework" module="beandoc" revision="1.0-dev-riot1" inline="true" pattern="${lib.dir}/[artifact].[ext]" />
		<java classpathref="classpath" classname="org.springframework.beandoc.client.BeanDocClient">
			<arg value="--properties" />
			<arg value="beandoc.properties" />
		</java>
	</target>

	<target name="dist" depends="js-jar,jar,javadoc,fmdoc,beandoc">
		<delete file="${dist.zip.file}" />
		<mkdir dir="${build.dir}/tmp" />
		<copy todir="${build.dir}/tmp" flatten="true">
			<fileset dir="${build.dir}/modules">
				<include name="**/*.jar" />
			</fileset>
			<chainedmapper>
				<flattenmapper />
			</chainedmapper>
		</copy>
		<zip destfile="${dist.zip.file}">
			<zipfileset dir="${build.dir}/api" prefix="riotfamily/docs/api" />
			<zipfileset dir="${build.dir}/fmdoc" prefix="riotfamily/docs/fmdoc" />
			<zipfileset dir="." excludes="build/**,lib/**,.*/**,.*,**/CVS/**" prefix="riotfamily" />
			<zipfileset dir="${build.dir}/tmp" prefix="riotfamily/dist" includes="**/*.jar" />
		</zip>
		<delete dir="${build.dir}/tmp" />
	</target>

	<target name="clean">
		<subant target="clean">
			<fileset refid="module-build.files" />
		</subant>
		<subant target="clean">
			<fileset refid="js-build.files" />
		</subant>
	</target>

	<target name="distclean">
		<delete dir="${build.dir}" />
		<delete dir="${lib.dir}" />
	</target>

</project>
