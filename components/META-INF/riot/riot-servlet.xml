<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
		http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util-2.0.xsd">
	
	<!-- 
	  - Service bean to edit components. Exposed via DWR.
	  -->
	<bean id="componentEditor" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="interceptorNames"><value>matchAllTxInterceptor</value></property>
		<property name="target"><ref bean="componentEditorTarget" /></property>
	</bean>

	<bean id="componentEditorTarget" class="org.riotfamily.components.editor.ComponentEditorImpl">
		<constructor-arg ref="componentDao" />
		<constructor-arg ref="componentRepository" />
		<property name="loginManager" ref="loginManager" />
		<property name="cache" ref="websiteCache" />
		<property name="editorConfigs">
			<map>
				<entry key="tinyMCE" value-ref="tinyMCE" />
			</map>
		</property>
	</bean>
	
	<bean id="tinyMCE" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="properties">
			<props>
				<prop key="plugins">smartquotes,autocleanup,nospam</prop>
				<prop key="smartquotes_quoteStyle">de</prop>
				<prop key="smartquotes_cleanup">false</prop>
				<prop key="valid_elements">+a[href|target|name],-strong/b,-em/i,h3/h2/h1,h4/h5/h6,p,br,hr,ul,ol,li,blockquote,sub,sup,span[class&lt;mailto]</prop>
				<prop key="theme_advanced_container_buttons1">formatselect,bold,italic,sup,bullist,numlist,outdent,indent,hr,link,unlink,anchor,code,undo,redo,charmap</prop>
				<prop key="theme_advanced_blockformats">p,h3,h4</prop>
			</props>
		</property>
	</bean>
	
	<!-- 
	  - FormRepository providing component property forms.
	  -->
	<bean id="componentFormRepository" class="org.riotfamily.forms.factory.xml.XmlFormRepository">
		<property name="config" value="/WEB-INF/website-config/component-forms.xml" />
		<property name="customElements" ref="customFormElements" />
		<property name="defaultBeanClass" value="java.util.HashMap" />
		<property name="mimetypesMap" ref="fileTypeMap" />
		<property name="imageCropper" ref="imageCropper" />
	</bean>
	
	<!-- 
	  - Controller that renders forms to edit component properties.
	  -->		
	<bean id="componentFormController" 
		name="/components/form/@{formId}/@{containerId}"
		class="org.riotfamily.components.editor.ComponentFormController">
		<constructor-arg ref="componentFormRepository" />
		<constructor-arg ref="componentRepository" />
		<constructor-arg ref="componentFormRegistry" />
		<constructor-arg ref="componentDao" />
		<constructor-arg ref="transactionManager" />
		<property name="formContextFactory" ref="formContextFactory" />
	</bean>

	<!--
	  - Overwrites the default loginFormView to display a box with istallation 
	  - instructions for the Riot-login bookmarklet.
	  -->	
	<bean id="loginFormViewReplacement" class="java.lang.String">
		<constructor-arg value="classpath:org/riotfamily/components/runtime/view/login-form.ftl" />
	</bean>
	
	<!-- 
	  - Login-popup that is opend by the Riot-login bookmarklet.
	  -->
	<bean id="toolbarLoginFormController" 
		name="/pages/login"
		class="org.riotfamily.riot.security.ui.LoginFormController">
		<constructor-arg ref="loginManager" />
		<property name="successViewName" value="classpath:/org/riotfamily/components/runtime/view/toolbar-login-success.ftl" />
	</bean>
	
	
	<!-- Module configuration -->
	
	<bean id="componentsModule" class="org.riotfamily.common.beans.module.FactoryBeanModule">
		<property name="properties">
			<map>
				<entry key="messageSourceBasenames">
					<list>
						<value>classpath:/org/riotfamily/components/runtime/i18n/messages</value>
						<value>/WEB-INF/website-config/messages</value>
					</list>
				</entry>
				<entry key="publicUrls">
					<value>/pages/login</value>
				</entry>
				<entry key="resourceMappings">
					<list>
						<bean class="org.riotfamily.common.web.resource.ResourceMapping">
							<property name="path" value="/" />
							<property name="location" value="classpath:/org/riotfamily/components/runtime/resources/" />
						</bean>
					</list>
				</entry>
				<entry key="resourceFilters">
					<list>
						<bean class="org.riotfamily.common.web.resource.PropertyResourceFilter">
							<property name="match" value="/**/pages.js" />
							<property name="propertiesMap">
								<map>
									<entry key="riotServletPrefix" value-ref="riotServletPrefix" />
								</map>
							</property>
						</bean>
						<bean class="org.riotfamily.common.web.resource.MessageResourceFilter">
							<property name="prefix" value="pages." />
							<property name="matches">
								<list>
									<value>/**/toolbar.js</value>
									<value>/**/inplace.js</value>
									<value>/**/component.js</value>
								</list>
							</property>
						</bean>
					</list>
				</entry>
				<entry key="dwrConfigurators">
					<list>
						<bean class="org.riotfamily.common.web.dwr.SpringConfigurator">
							<property name="converterTypes">
								<props>
									<prop key="org.riotfamily.components.editor.TypeInfo">bean</prop>
								</props>
							</property>
							<property name="serviceBeans">
								<map>
									<entry key="ComponentEditor" value-ref="componentEditor" />
								</map>
							</property>
							<property name="serviceInterfaces">
								<list>
									<value>org.riotfamily.components.editor.ComponentEditor</value>
								</list>
							</property>
						</bean>
					</list>
				</entry>
			</map>			
		</property>
	</bean>
	 	

	<!-- 
	  - RiotDao to list dirty ComponentLists.
	  -->
	<bean id="dirtyComponentListDao" class="org.riotfamily.components.dao.DirtyComponentListDao">
		<constructor-arg ref="componentDao" />
	</bean>
	 
	<bean id="gotoComponentListCommand" class="org.riotfamily.components.command.GotoListCommand">
		<constructor-arg ref="componentRepository" />
		<property name="windowName" value="preview" />
	</bean>
	
</beans>