<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:override="http://www.riotfamily.org/schema/common/override"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
		http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util-2.5.xsd
		http://www.riotfamily.org/schema/common/override
		http://www.riotfamily.org/schema/common/override-8.0.xsd">

	<override:put ref="freemarkerConfig" property="macroLibraries">
		<entry key="inplace" value="classpath:org/riotfamily/components/view/inplace.ftl" />
	</override:put>
	
	<bean class="org.riotfamily.components.view.ContentMapObjectWrapperPlugin">
		<description>
			ObjectWrapperPlugin that wraps ContentMaps with a MapModel 
			(instead of a SimpleHash) so that getOwner(), getId() etc. can be 
			accessed by a template.
		</description>
	</bean>
	
	<bean id="inplaceMacroHelper" class="org.riotfamily.components.view.InplaceMacroHelperFactory">
		<constructor-arg ref="componentListRenderer" />
		<property name="toolbarScripts">
			<list>
				<value>riot-js/resources.js</value>
				<value>toolbar-loader.js</value>
			</list>
		</property>
	</bean>
	
	<override:bean ref="cacheKeyAugmentor" class="org.riotfamily.components.cache.EditModeCacheKeyAugmentor" />

	<!-- Initialize the ComponentRenderer --> 
 	<bean class="org.riotfamily.components.render.component.ViewComponentRendererInitializer">
 		<constructor-arg ref="componentRenderer" />
 	</bean>
 
</beans>
